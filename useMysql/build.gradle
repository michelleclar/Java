plugins {
    id 'idea'
    id 'nu.studer.jooq' version '9.0'
}

dependencies {
    implementation project(':common')
    implementation libs.mysql
    jooqGenerator libs.mysql
}


def mySrcDir = 'src/main/java'
def generatedDir = 'src/main/generated'
sourceSets {
    main {
        java {
            srcDir generatedDir
            srcDir mySrcDir
        }
    }
}
idea {
    module {
        generatedSourceDirs.addAll(file(generatedDir))
        sourceDirs.addAll(file(generatedDir))
        sourceDirs.addAll(file(mySrcDir))
    }
}
def envProperties = new Properties()
def envPropertiesFile = file('.env')
envPropertiesFile.withReader('UTF-8') { reader ->
    envProperties.load(reader)
}

import nu.studer.gradle.jooq.JooqEdition
import org.jooq.meta.jaxb.Logging
jooq {
    version = '3.19.12'
    edition = JooqEdition.OSS

    configurations {
        main {
            generationTool {
                logging = Logging.WARN
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = envProperties.getProperty('jdbcUrl')
                    user = envProperties.getProperty('dbUser')
                    password = envProperties.getProperty('dbPassword')
                    properties {
                        property {
                            key = 'ssl'
                            value = 'false'
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'xjrc365-dev'
//                        forcedTypes {
//                            forcedType {
//                                name = 'varchar'
//                                includeExpression = '.*'
//                                includeTypes = 'JSONB?'
//                            }
//                            forcedType {
//                                name = 'varchar'
//                                includeExpression = '.*'
//                                includeTypes = 'INET'
//                            }
//                        }
                    }
                    generate {
                        deprecated = false
                        records = true
//                        immutablePojos = false
                        fluentSetters = true
                        pojos = true
                        daos = true
                    }
                    target {
                        packageName = 'org.carl.generated'
                        directory = 'src/main/generated'
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}
